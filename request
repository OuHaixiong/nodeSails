IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        bytesRead: 2276,
        _externalStream: {},
        fd: 20,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 790,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 104133,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 51510 },
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        jsonx: [Function: jsonx],
        badRequest: [Function: wrapper],
        created: [Function: wrapper],
        forbidden: [Function: wrapper],
        notFound: [Function: wrapper],
        ok: [Function: wrapper],
        serverError: [Function: wrapper],
        negotiate: [Function: wrapper],
        locale: 'en',
        __: [Function: bound i18nTranslate],
        __n: [Function: bound i18nTranslatePlural],
        __l: [Function: bound i18nTranslationList],
        __h: [Function: bound i18nTranslationHash],
        __mf: [Function: bound i18nMessageformat],
        getLocale: [Function: bound i18nGetLocale],
        setLocale: [Function: bound i18nSetLocale],
        getCatalog: [Function: bound i18nGetCatalog],
        getLocales: [Function: bound i18nGetLocales],
        addLocale: [Function: bound i18nAddLocale],
        removeLocale: [Function: bound i18nRemoveLocale],
        i18n: [Function: bound i18nTranslate],
        guessView: [Function],
        view: [Function] } },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        bytesRead: 2276,
        _externalStream: {},
        fd: 20,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 790,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 104133,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 51510 },
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        jsonx: [Function: jsonx],
        badRequest: [Function: wrapper],
        created: [Function: wrapper],
        forbidden: [Function: wrapper],
        notFound: [Function: wrapper],
        ok: [Function: wrapper],
        serverError: [Function: wrapper],
        negotiate: [Function: wrapper],
        locale: 'en',
        __: [Function: bound i18nTranslate],
        __n: [Function: bound i18nTranslatePlural],
        __l: [Function: bound i18nTranslationList],
        __h: [Function: bound i18nTranslationHash],
        __mf: [Function: bound i18nMessageformat],
        getLocale: [Function: bound i18nGetLocale],
        setLocale: [Function: bound i18nSetLocale],
        getCatalog: [Function: bound i18nGetCatalog],
        getLocales: [Function: bound i18nGetLocales],
        addLocale: [Function: bound i18nAddLocale],
        removeLocale: [Function: bound i18nRemoveLocale],
        i18n: [Function: bound i18nTranslate],
        guessView: [Function],
        view: [Function] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers:
   { host: '127.0.0.1:1337',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:51.0) Gecko/20100101 Firefox/51.0',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
     'accept-encoding': 'gzip, deflate',
     cookie: 'sails.sid=s%3AW9Y_-MLhRURK4PGdPZ4l7KQ2VA1TJvgs.CpqId3JWobijOEZZ7XPRqao5adB%2F%2B1vvO9miWMEPDZ8; io=MZSg1XTgFPHh0VhoAAAA',
     connection: 'keep-alive',
     'upgrade-insecure-requests': '1',
     'cache-control': 'max-age=0' },
  rawHeaders:
   [ 'Host',
     '127.0.0.1:1337',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:51.0) Gecko/20100101 Firefox/51.0',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
     'Accept-Encoding',
     'gzip, deflate',
     'Cookie',
     'sails.sid=s%3AW9Y_-MLhRURK4PGdPZ4l7KQ2VA1TJvgs.CpqId3JWobijOEZZ7XPRqao5adB%2F%2B1vvO9miWMEPDZ8; io=MZSg1XTgFPHh0VhoAAAA',
     'Connection',
     'keep-alive',
     'Upgrade-Insecure-Requests',
     '1',
     'Cache-Control',
     'max-age=0' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/test/test',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        bytesRead: 2276,
        _externalStream: {},
        fd: 20,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 790,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 104133,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 51510 },
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        jsonx: [Function: jsonx],
        badRequest: [Function: wrapper],
        created: [Function: wrapper],
        forbidden: [Function: wrapper],
        notFound: [Function: wrapper],
        ok: [Function: wrapper],
        serverError: [Function: wrapper],
        negotiate: [Function: wrapper],
        locale: 'en',
        __: [Function: bound i18nTranslate],
        __n: [Function: bound i18nTranslatePlural],
        __l: [Function: bound i18nTranslationList],
        __h: [Function: bound i18nTranslationHash],
        __mf: [Function: bound i18nMessageformat],
        getLocale: [Function: bound i18nGetLocale],
        setLocale: [Function: bound i18nSetLocale],
        getCatalog: [Function: bound i18nGetCatalog],
        getLocales: [Function: bound i18nGetLocales],
        addLocale: [Function: bound i18nAddLocale],
        removeLocale: [Function: bound i18nRemoveLocale],
        i18n: [Function: bound i18nTranslate],
        guessView: [Function],
        view: [Function] } },
  _consuming: false,
  _dumped: false,
  originalUrl: '/test/test',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/test/test',
     path: '/test/test',
     href: '/test/test',
     _raw: '/test/test' },
  query: {},
  res:
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 790,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 104133,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _peername: [Object],
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 790,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 104133,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _peername: [Object],
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers:
      { 'x-powered-by': 'Sails <sailsjs.org>',
        'access-control-allow-origin': '',
        'access-control-allow-credentials': '',
        'access-control-allow-methods': '',
        'access-control-allow-headers': '',
        'access-control-expose-headers': '' },
     _headerNames:
      { 'x-powered-by': 'X-Powered-By',
        'access-control-allow-origin': 'Access-Control-Allow-Origin',
        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',
        'access-control-allow-methods': 'Access-Control-Allow-Methods',
        'access-control-allow-headers': 'Access-Control-Allow-Headers',
        'access-control-expose-headers': 'Access-Control-Expose-Headers' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals:
      { [Function: locals]
        _: [Object],
        util: [Object],
        session: [Object],
        req: [Circular],
        res: [Circular],
        sails:

        |>   [a lifted Sails app on port 1337]
         \___/  For help, see: http://sailsjs.org/documentation/concepts/

         Tip: Use `sails.config` to access your app's runtime configuration.

         2 Models:
         BlogEntry,User

         4 Controllers:
         BlogEntryController,CommentController,TestController,UserController

         20 Hooks:
         moduleloader,logger,request,orm,views,blueprints,responses,controllers,sockets,pubsub,policies,services,csrf,cors,i18n,userconfig,session,grunt,http,userhooks
         ,
        title: undefined,
        locale: 'en',
        __: [Function: bound i18nTranslate],
        __n: [Function: bound i18nTranslatePlural],
        __l: [Function: bound i18nTranslationList],
        __h: [Function: bound i18nTranslationHash],
        __mf: [Function: bound i18nMessageformat],
        getLocale: [Function: bound i18nGetLocale],
        setLocale: [Function: bound i18nSetLocale],
        getCatalog: [Function: bound i18nGetCatalog],
        getLocales: [Function: bound i18nGetLocales],
        addLocale: [Function: bound i18nAddLocale],
        removeLocale: [Function: bound i18nRemoveLocale],
        i18n: [Function: bound i18nTranslate],
        _csrf: null },
     writeHead: [Function: writeHead],
     end: [Function: end],
     jsonx: [Function: jsonx],
     badRequest: [Function: wrapper],
     created: [Function: wrapper],
     forbidden: [Function: wrapper],
     notFound: [Function: wrapper],
     ok: [Function: wrapper],
     serverError: [Function: wrapper],
     negotiate: [Function: wrapper],
     locale: 'en',
     __: [Function: bound i18nTranslate],
     __n: [Function: bound i18nTranslatePlural],
     __l: [Function: bound i18nTranslationList],
     __h: [Function: bound i18nTranslationHash],
     __mf: [Function: bound i18nMessageformat],
     getLocale: [Function: bound i18nGetLocale],
     setLocale: [Function: bound i18nSetLocale],
     getCatalog: [Function: bound i18nGetCatalog],
     getLocales: [Function: bound i18nGetLocales],
     addLocale: [Function: bound i18nAddLocale],
     removeLocale: [Function: bound i18nRemoveLocale],
     i18n: [Function: bound i18nTranslate],
     guessView: [Function],
     view: [Function] },
  next: [Function: next],
  _sails:

  |>   [a lifted Sails app on port 1337]
   \___/  For help, see: http://sailsjs.org/documentation/concepts/

   Tip: Use `sails.config` to access your app's runtime configuration.

   2 Models:
   BlogEntry,User

   4 Controllers:
   BlogEntryController,CommentController,TestController,UserController

   20 Hooks:
   moduleloader,logger,request,orm,views,blueprints,responses,controllers,sockets,pubsub,policies,services,csrf,cors,i18n,userconfig,session,grunt,http,userhooks
   ,
  param: [Function: getValForParam],
  _startTime: 2017-03-09T03:43:42.377Z,
  secret: 'cffe2af5d3cbf2d77e96caa56543f950',
  cookies: { io: 'MZSg1XTgFPHh0VhoAAAA' },
  signedCookies: { 'sails.sid': 'W9Y_-MLhRURK4PGdPZ4l7KQ2VA1TJvgs' },
  _parsedOriginalUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/test/test',
     path: '/test/test',
     href: '/test/test',
     _raw: '/test/test' },
  sessionStore:
   MemoryStore {
     domain: null,
     _events: { disconnect: [Object], connect: [Object] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: {},
     generate: [Function] },
  sessionID: 'T2RQcx850r4BN9o62cMdAsfdMKhz1_Is',
  session:
   Session {
     cookie:
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  file: [Function],
  originalMethod: 'GET',
  _route_index: 37,
  route:
   Route {
     path: '/test/test/:id?',
     method: 'get',
     callbacks: [ [Function: routeTargetFnWrapper] ],
     keys: [ [Object] ],
     regexp: /^\/test\/test(?:\/([^\/]+?))?\/?$/i,
     params: [ id: undefined ] },
  params: [ id: undefined ],
  options:
   { action: 'test',
     controller: 'test',
     actions: true,
     index: true,
     shortcuts: true,
     rest: true,
     prefix: '',
     restPrefix: '',
     pluralize: false,
     populate: true,
     autoWatch: true,
     detectedVerb: { verb: 'all', original: '/*', path: '/*' },
     skipRegex: [],
     _middlewareType: 'CSRF HOOK: CSRF' },
  allParams: [Function],
  flash: [Function: _flash],
  port: 1337,
  baseUrl: 'http://127.0.0.1:1337',
  validate: [Function: _validate],
  explicitlyAcceptsHTML: true,
  wantsJSON: undefined,
  languages: [ 'en' ],
  regions: [ 'en' ],
  language: 'en',
  region: 'cn',
  locale: 'en',
  __: [Function: bound i18nTranslate],
  __n: [Function: bound i18nTranslatePlural],
  __l: [Function: bound i18nTranslationList],
  __h: [Function: bound i18nTranslationHash],
  __mf: [Function: bound i18nMessageformat],
  getLocale: [Function: bound i18nGetLocale],
  setLocale: [Function: bound i18nSetLocale],
  getCatalog: [Function: bound i18nGetCatalog],
  getLocales: [Function: bound i18nGetLocales],
  addLocale: [Function: bound i18nAddLocale],
  removeLocale: [Function: bound i18nRemoveLocale] }
